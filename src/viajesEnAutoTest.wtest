import remiseras.*
import oficinaDeLaCooperativa.*
import clientas.*


//Viajes de 10 km con las distintas remiseras de la cooperativa.

test " Viaje de 10 km con la remisera Roxana(Ana María está 
       económicamente estable) " {
	assert.equals(180 , roxana.precioViaje(ludmila , 10))
	assert.equals(300 , roxana.precioViaje(anaMaria , 10))
	assert.equals(220 , roxana.precioViaje(teresa , 10))
}
test " Viaje de 10 km con la remisera Gabriela(Ana María está 
       económicamente estable)" {
	assert.equals(216 , gabriela.precioViaje(ludmila , 10))
	assert.equals(360 , gabriela.precioViaje(anaMaria , 10))
	assert.equals(264 , gabriela.precioViaje(teresa , 10))
}
test " Viaje de 10 km con la remisera Mariela(Ana María está 
       económicamente estable)" {
	assert.equals(180 , mariela.precioViaje(ludmila , 10))
	assert.equals(300 , mariela.precioViaje(anaMaria , 10))
	assert.equals(220 , mariela.precioViaje(teresa , 10))
}
test " Viaje de 10 km con la remisera Juana(Ana María está 
       económicamente estable)" {
	assert.equals(200 , juana.precioViaje(ludmila , 10))
	assert.equals(200 , juana.precioViaje(anaMaria , 10))
	assert.equals(200 , juana.precioViaje(teresa , 10))
}


//Viajes de 2 km con las distintas remiseras de la cooperativa.

test " Viaje de 2 km con la remisera Roxana" {
	assert.equals(36 , roxana.precioViaje(ludmila , 2))
	assert.equals(60 , roxana.precioViaje(anaMaria , 2))
	assert.equals(44 , roxana.precioViaje(teresa , 2))
}
test " Viaje de 2 km con la remisera Gabriela" {
	assert.equals(43.20 , gabriela.precioViaje(ludmila , 2))
	assert.equals(72 , gabriela.precioViaje(anaMaria , 2))
	assert.equals(52.80 , gabriela.precioViaje(teresa , 2))
}
test " Viaje de 2 km con la remisera Mariela" {
	assert.equals(50 , mariela.precioViaje(ludmila , 2))
	assert.equals(60 , mariela.precioViaje(anaMaria , 2))
	assert.equals(50 , mariela.precioViaje(teresa , 2))
}
test " Viaje de 2 km con la remisera Juana" {
	assert.equals(100 , juana.precioViaje(ludmila , 2))
	assert.equals(100 , juana.precioViaje(anaMaria , 2))
	assert.equals(100 , juana.precioViaje(teresa , 2))
}


// Viajes de 1 km y 10 km con la remisera Lucía reemplazando a 
//Mariela y la cadeta Melina está trabajando para Ludmila.

test " Viajes con la remisera Lucía reemplazando a Mariela y 
       la cadeta Melina trabajando para Ludmila" {
    lucia.reemplazarA(mariela)
    melina.trabajarPara(ludmila)
	assert.equals(150 , lucia.precioViaje(melina , 10))
	assert.equals(50 , lucia.precioViaje(melina , 1))
}


// Elección de remisera entre Roxana(primera opción) y Juana
//(segunda opción) para viaje de 4 y 10 km para distintas 
// clientas

test " Juana como remisera elegida entre ella y Roxana para 
       viaje de 10 km para Ana Maria " {
    oficina.asignarRemiseras(roxana , juana)
    assert.equals(juana , oficina.remiseraElegidaParaViaje(anaMaria , 10))
}
test " Roxana como remisera elegida entre ella y Juana para 
       viaje de 10 km para Teresa " {
    oficina.asignarRemiseras(roxana , juana)
    assert.equals(roxana , oficina.remiseraElegidaParaViaje(teresa , 10))
}
test " Roxana como remisera elegida entre ella y Juana para 
       viaje de 4 km para Teresa " {
    oficina.asignarRemiseras(roxana , juana)
    assert.equals(roxana , oficina.remiseraElegidaParaViaje(teresa , 4))
}
